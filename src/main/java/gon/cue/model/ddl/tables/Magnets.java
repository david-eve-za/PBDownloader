/*
 * This file is generated by jOOQ.
*/
package gon.cue.model.ddl.tables;


import gon.cue.model.ddl.Keys;
import gon.cue.model.ddl.Public;
import gon.cue.model.ddl.tables.records.MagnetsRecord;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Magnets extends TableImpl<MagnetsRecord> {

    private static final long serialVersionUID = 548887844;

    /**
     * The reference instance of <code>PUBLIC.MAGNETS</code>
     */
    public static final Magnets MAGNETS = new Magnets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MagnetsRecord> getRecordType() {
        return MagnetsRecord.class;
    }

    /**
     * The column <code>PUBLIC.MAGNETS.ID</code>.
     */
    public final TableField<MagnetsRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.MAGNETS.ADDED</code>.
     */
    public final TableField<MagnetsRecord, Date> ADDED = createField("ADDED", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.MAGNETS.LINK</code>.
     */
    public final TableField<MagnetsRecord, String> LINK = createField("LINK", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.MAGNETS.NAME</code>.
     */
    public final TableField<MagnetsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.MAGNETS.Size</code>.
     */
    public final TableField<MagnetsRecord, Long> SIZE = createField("Size", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.MAGNETS</code> table reference
     */
    public Magnets() {
        this(DSL.name("MAGNETS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.MAGNETS</code> table reference
     */
    public Magnets(String alias) {
        this(DSL.name(alias), MAGNETS);
    }

    /**
     * Create an aliased <code>PUBLIC.MAGNETS</code> table reference
     */
    public Magnets(Name alias) {
        this(alias, MAGNETS);
    }

    private Magnets(Name alias, Table<MagnetsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Magnets(Name alias, Table<MagnetsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MagnetsRecord, Long> getIdentity() {
        return Keys.IDENTITY_MAGNETS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Magnets as(String alias) {
        return new Magnets(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Magnets as(Name alias) {
        return new Magnets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Magnets rename(String name) {
        return new Magnets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Magnets rename(Name name) {
        return new Magnets(name, null);
    }
}
